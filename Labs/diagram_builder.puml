@startuml

left to right direction
skinparam backgroundColor #1B2631
skinparam class {
  BackgroundColor #2E4053
  BorderColor #1111111
  ArrowColor #BDC3C7
  FontColor #BFFFFF
}

class Contact << (C, #FFA500) >> {
    + value: String
    + initialize(value)
    + to_s(): string
}

class EmailContact << (C, #FFA500) >> extends Contact {
    + valid?: boolean
}

class PhoneContact << (C, #FFA500) >> extends Contact {
    + valid?: boolean
}

class TelegramContact << (C, #FFA500) >> extends Contact {
    + valid?: boolean
}

class Git << (C, #FFA500) >> extends Contact {
    + valid?: boolean
    + to_json
}

class ContactInfo << (C, #FFA500) >> {
    + phone: PhoneContact
    + email: EmailContact
    + telegram: TelegramContact
    + initialize(**kwargs)
    + valid?: boolean
    + to_s: string
    + to_json: string
}

class Student << (C, #FFA500) >> {
    + id: string
    + name: string
    + middle_name: string
    + surname: string
    + git: Git
    + contact_info: ContactInfo
    - validator: StudentValidator
    + initialize(**kwargs)
    + name_initials: string
    + get_generic_info: string
    + short_form: string
    + to_s: string
    + to_json: string
    + {static} from_string(string): Student
}

class StudentDisplay << (C, #FFA500) >> {
    + initials
    + git
    + contact
    + initialize(student)
    + to_s: string
    + to_json
}

interface Validator {
    + entity
    + initialize(entity)
    + validate
}

class StudentValidator << (C, #FFA500) >>  implements Validator {
    + validate
    - valid_name?
    + valid_git?
    + valid_contact_info?
}

interface FileManager {
    + load_data(source)
    + save_data(destination, data)
}

class StudentFileManager << (C, #FFA500) >>  implements FileManager {
    - strategy: FileStrategy
    + load_data(source)
    + save_data(destination, data)
    - set_strategy_for(file_path)
}

interface FileStrategy {
    + load_data(source)
    + save_data(destination, data)
}

class JsonFileStrategy << (C, #FFA500) >>  implements FileStrategy {
    + load_data(source)
    + save_data(destination, data)
}

class TxtFileStrategy << (C, #FFA500) >>  implements FileStrategy {
    + load_data(source)
    + save_data(destination, data)
}

class YamlFileStrategy << (C, #FFA500) >>  implements FileStrategy {
    + load_data(source)
    + save_data(destination, data)
}

class DataTable << (C, #FFA500) >>  {
    - data
    + initialize(data)
    + [](row, col)
    + row_count
    + column_count
    + to_s
}

class DataList << (C, #FFA500) >>  {
    # data
    # selected
    + initialize(data = [])
    + set_data(new_data)
    + [](index)
    + size
    + each
    + select(number)
    + get_selected
    + reset_selected
    + append(element)
    + remove_by(index)
    + delete_at(index, element)
    + get_data: DataTable
    + get_names: String
}

class StudentList << (C, #FFA500) >>  extends DataList {
    + file_manager: StudentFileManager
    + initialize(data = [])
    + select(number)
    + sort_by_surname
    + get_k_n_student_list(k, n, data_list = nil)
    + load_data(file_path)
    + save_data(file_path)
    + get_data: DataTable
    + get_names: String
}

ContactInfo *-- PhoneContact
ContactInfo *-- EmailContact
ContactInfo *-- TelegramContact
Student *-- ContactInfo
Student *-- Git
Student *-- StudentValidator
StudentList *-- StudentFileManager
StudentFileManager *-- FileStrategy
StudentDisplay *-- Git
StudentDisplay *-- ContactInfo
@enduml